import java.util.LinkedHashMap;
import java.util.Map;
public class FirstNonRepeatedCharacter {
 public static void main(String[] args) {
 String str = "swiss";
 Map<Character, Integer> charCount = new LinkedHashMap<>();
 for (char c : str.toCharArray()) {
 charCount.put(c, charCount.getOrDefault(c, 0) + 1);
 }
 for (Map.Entry<Character, Integer> entry : charCount.entrySet()) {
 if (entry.getValue() == 1) {
 System.out.println(entry.getKey());
 break;
 }
 }
 }
}




import java.util.LinkedHashMap;
import java.util.Map;
public class FirstNonRepeatedCharacter 
{
 public static void main(String[] args) 
{
 String str = "automation";

char result = findFirstNonRepeating(str);
 System.out.println("First non-repeating character: " + result);
}

public static char findFirstNonRepeating(String str)
{
Map<Character , Integer> charCountMap = new LinkedHashMap<>();

for(char ch: str.toCharArray())
{
charCountMap.put(ch,charCountMap.getOrDefault(ch,0)+1);
}
for(Map.Entry<Character,Integer> entry : charCountMap.entrySet())
{
if(entry.getValue() == 1)
{
return entry.getKey();
}
}
return '\0';
}
}


Explanation:
 charCountMap.getOrDefault(ch, 0) + 1: Increments the count of each character.
 if (entry.getValue() == 1): Finds the first character that appears only once.





